#!/bin/bash


trap 'exit 0' INT

CONFIG="$HOME/.shadowsocks.json"
INSTANCEID="i-478eede2"
describe() {
    aws ec2 describe-instances --instance-ids $INSTANCEID
}
getip() {
    jq '.Reservations[].Instances[].PublicIpAddress' <<< $1
}
getstate() {
    jq '.Reservations[].Instances[].State.Name' <<< $1
}
echossh() {
    if [ "$1" == "null" ]; then
        return 1
    fi

    echo -n "ssh"
    echo -n " -o StrictHostKeyChecking=no"
    echo -n " -o UserKnownHostsFile=/dev/null"
    echo " ec2-user@$1"
}
hosts() {
    if [ "$1" == "null" ]; then
        return 1
    fi

    sudo sed -i '' '/icewhite\.us/d' /etc/hosts
    sudo bash -c "echo $1 icewhite.us >> /etc/hosts"
}

case "$1" in
    start)
        aws ec2 "start-instances" --instance-ids $INSTANCEID | \
            jq '.StartingInstances[].CurrentState.Name'

        while [ true ]; do
            sleep 5

            output=$(describe)
            state=$(getstate "$output")

            if [ $state == '"running"' ]; then
                publicip=$(getip "$output")
                break
            fi
        done
        sed -i '' 's/"server": ".*$/"server": '$publicip',/' "$CONFIG"
        hosts $publicip
        echossh $publicip;;
    stop)
        aws ec2 "stop-instances" --instance-ids $INSTANCEID | \
            jq '.StoppingInstances[].CurrentState.Name';;
    status)
        output=$(describe)
        publicip=$(getip "$output")
        getstate "$output"
        hosts $publicip
        echossh $publicip;;
    *)
        echo "usage: $0 {start|stop|status}"
        exit 2
esac
