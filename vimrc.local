set nocursorline " don't highlight current line
set colorcolumn=81

" keyboard shortcuts
" inoremap jj <ESC>

" highlight search
"set hlsearch
"nmap <leader>hl :let @/ = ""<CR>

" gui settings

" let g:solarized_termcolors = 256
" let g:solarized_termtrans = 1
" set background=dark
" colorscheme solarized

let g:molokai_original = 1
let g:rehash256 = 1
colorscheme molokai

" Disambiguate ,a & ,t from the Align plugin, making them fast again.
"
" This section is here to prevent AlignMaps from adding a bunch of mappings
" that interfere with the very-common ,a and ,t mappings. This will get run
" at every startup to remove the AlignMaps for the *next* vim startup.
"
" If you do want the AlignMaps mappings, remove this section, remove
" ~/.vim/bundle/Align, and re-run rake in maximum-awesome.
function! s:RemoveConflictingAlignMaps()
  if exists("g:loaded_AlignMapsPlugin")
    AlignMapsClean
  endif
endfunction
command! -nargs=0 RemoveConflictingAlignMaps call s:RemoveConflictingAlignMaps()
silent! autocmd VimEnter * RemoveConflictingAlignMaps

" commentary & dictionary
autocmd FileType nginx set commentstring=#\ %s
autocmd FileType javascript set dictionary+=~/.vim/dict/javascript
autocmd FileType javascript set dictionary+=~/.vim/dict/node
autocmd FileType javascript nnoremap <F5> :!clear<CR>:!node %<CR>

" emmet
let g:user_emmet_leader_key='<C-T>'

" filetypes
autocmd BufRead,BufNewFile *.md set filetype=markdown
autocmd BufRead,BufNewFile *.md set spell
autocmd BufRead,BufNewFile .eslintrc,.prettierrc set filetype=json
autocmd BufRead,BufNewFile *.gtpl set filetype=gohtmltmpl

" beautifiers
autocmd BufEnter,FileType * execute ":vnoremap <F10> :!beautifiers -t".&filetype."<CR>"
autocmd BufEnter,FileType * execute ":nnoremap <F10> :!beautifiers -t".&filetype." %<CR>"

" dash
nmap <leader>h <Plug>DashSearch

" go
let g:SuperTabDefaultCompletionType = "context"
let g:go_def_mode = "godef"
let g:go_fmt_command = "goimports"
let g:go_fmt_experimental = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_operators = 1
let g:go_highlight_types = 1
autocmd FileType go set completeopt-=preview " suppress gocode top window
autocmd FileType go nnoremap <F5> :!clear<CR>:GoRun<CR>
autocmd FileType go nnoremap <F6> :GoTest<CR>
autocmd FileType go nnoremap <F9> :GoMetaLinter<CR>
autocmd FileType go nnoremap <leader>a :GoAlternate<CR>
autocmd FileType go nmap <leader>j <Plug>(go-def-tab)
